{"version":3,"file":"static/js/520.f11649b3.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.module.css","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilterByQuery = state => state.filter.query;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterByQuery],\n  (contacts, query) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(query.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"formItem\":\"ContactForm_formItem__dbiTg\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport Notiflix from 'notiflix';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const duplicationNameCheck = newName => {\n    return contacts.find(({ name }) => name === newName);\n  };\n\n  const duplicationNumberCheck = newNumber => {\n    return contacts.find(({ number }) => number === newNumber);\n  };\n\n  function handleInputChange(e) {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (duplicationNameCheck(name) || duplicationNumberCheck(number)) {\n      Notiflix.Notify.failure(`This contact is already in List`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <div className={css.formItem}>\n        <input\n          className={css.input}\n          value={name}\n          onChange={handleInputChange}\n          placeholder=\"write your name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div className={css.formItem}>\n        <input\n          className={css.input}\n          value={number}\n          onChange={handleInputChange}\n          placeholder=\"+3** ** ** ** ***\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <button className={css.button} type=\"submit\" aria-label=\"button-submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filterField\":\"Filter_filterField__hjFfe\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { updatedFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilterByQuery } from '../../redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilter = event => {\n    dispatch(updatedFilter(event.currentTarget.value));\n  };\n  const value = useSelector(selectFilterByQuery);\n\n  return (\n    <div className={css.filterField}>\n      <label className={css.label}>Name filter</label>\n      <input\n        type=\"text\"\n        placeholder=\"start typing a name\"\n        className={css.input}\n        value={value}\n        onChange={onFilter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactItem_listItem__NSSYk\",\"personData\":\"ContactItem_personData__xOlma\",\"name\":\"ContactItem_name__XjpNK\",\"number\":\"ContactItem_number__mfZ8x\",\"deleteBtn\":\"ContactItem_deleteBtn__fTo+a\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.listItem}>\n      <p className={css.name}>{name}</p>\n      <div className={css.personData}>\n        <p className={css.number}>{number}</p>\n        <button\n          className={css.deleteBtn}\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(id))}\n          aria-label=\"delete\"\n        >\n          delete\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilterByQuery,\n} from '../../redux/contacts/selectors';\nimport ContactItem from '../ContactItem';\nimport css from './ContactList.module.css';\n\nconst selectVisibleContacts = (contacts, query) => {\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(query.toLowerCase())\n  );\n};\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const query = useSelector(selectFilterByQuery);\n  const visibleContacts = selectVisibleContacts(contacts, query);\n\n  return (\n    <ul className={css.list}>\n      {contacts &&\n        visibleContacts.map(contact => (\n          <ContactItem key={contact.id} {...contact} />\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList';\n\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <div className={css.content}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n      </div>\n\n      <div className={css.content}>\n        <h2 className={css.title}>Contacts</h2>\n        <Filter />\n        {isLoading && !error && (\n          <b className={css.subtitle}>Request in progress...</b>\n        )}\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilterByQuery","filter","query","selectIsLoading","isLoading","selectError","error","createSelector","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleInputChange","e","target","value","reset","onSubmit","newNumber","newName","preventDefault","find","Notiflix","addContact","autoComplete","className","css","onChange","placeholder","type","pattern","title","required","event","updatedFilter","currentTarget","id","onClick","deleteContact","visibleContacts","selectVisibleContacts","map","contact","Contacts","useEffect","fetchContacts"],"sourceRoot":""}